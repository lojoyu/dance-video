{"version":3,"sources":["App.js","index.js"],"names":["App","initRefs","setState","video","refs","ctx2","canvas2","getContext","width","height","prevFrames","console","log","updateWindowDimensions","window","innerWidth","innerHeight","updateCanvas","state","lastTime","undefined","currentTime","computeFrame","requestAnimationFrame","ctx1","drawImage","prevFrame","frame","getImageData","l","data","length","shift","push","i","r","g","b","putImageData","url","this","addEventListener","removeEventListener","style","display","ref","src","autoPlay","loop","preload","crossOrigin","Component","ReactDOM","render","document","getElementById"],"mappings":"iPA0GeA,G,kBAnGb,aAAe,IAAD,8BACZ,+CAkBFC,SAAW,WACT,EAAKC,SAAS,CACZC,MAAO,EAAKC,KAAKD,MAEjBE,KAAM,EAAKD,KAAKE,QAAQC,WAAW,MACnCC,MAAO,EACPC,OAAQ,EACRC,WAAY,KAIdC,QAAQC,IAAI,EAAKR,KAAKD,QA9BV,EAiCdU,uBAAyB,WACvB,EAAKX,SAAS,CACZM,MAAOM,OAAOC,WACdN,OAAQK,OAAOE,eApCL,EAwCdC,aAAe,WAAO,IAAD,EACK,EAAKC,MAAxBf,EADc,EACdA,MAAOgB,EADO,EACPA,eACSC,IAAVjB,EAAsBgB,EAAWhB,EAAMkB,eACrCF,GAIX,EAAKG,eAGPC,sBAAsB,EAAKN,eAlDf,EAqDdK,aAAe,WAAO,IAAD,EACkC,EAAKJ,MAA/Cb,GADQ,EACdmB,KADc,EACRnB,MAAMF,EADE,EACFA,MAAOK,EADL,EACKA,MAAOC,EADZ,EACYA,OAAQC,EADpB,EACoBA,WAEvCL,EAAKoB,UAAUtB,EAAO,EAAG,EAAGK,EAAOC,GACnC,IAEIiB,EAFAC,EAAQtB,EAAKuB,aAAa,EAAG,EAAGpB,EAAOC,GACvCoB,EAAIF,EAAMG,KAAKC,OAAS,EAQ5B,GANIrB,EAAWqB,OAAS,KACtBL,EAAYhB,EAAWsB,SAEzBtB,EAAWuB,KAAKN,QAGEP,IAAdM,EACF,IAAK,IAAIQ,EAAI,EAAGA,EAAIL,EAAGK,IAAK,CAC1B,IAAIC,EAA0B,EAAtBR,EAAMG,KAAS,EAAJI,EAAQ,GAAiC,GAA1BR,EAAUI,KAAS,EAAJI,EAAQ,GACrDE,EAA0B,EAAtBT,EAAMG,KAAS,EAAJI,EAAQ,GAAiC,GAA1BR,EAAUI,KAAS,EAAJI,EAAQ,GACrDG,EAA0B,EAAtBV,EAAMG,KAAS,EAAJI,EAAQ,GAAiC,GAA1BR,EAAUI,KAAS,EAAJI,EAAQ,GAEzDP,EAAMG,KAAS,EAAJI,EAAQ,GAAKC,EACxBR,EAAMG,KAAS,EAAJI,EAAQ,GAAKE,EACxBT,EAAMG,KAAS,EAAJI,EAAQ,GAAKG,EAI5BhC,EAAKiC,aAAaX,EAAO,EAAG,IA5E5B,EAAKT,MAAQ,CACXC,UAAW,EACXoB,IAAK,6FAJK,E,iFASZC,KAAKvC,WACLuC,KAAKvB,eACLuB,KAAK3B,yBACLC,OAAO2B,iBAAiB,SAAUD,KAAK3B,0B,6CAIvCC,OAAO4B,oBAAoB,SAAUF,KAAK3B,0B,+BAmE1C,IAAIL,EAAQM,OAAOC,WACfN,EAASK,OAAOE,YACpB,OACE,6BACE,2BAAO2B,MAAO,CAACC,QAAQ,QAASC,IAAI,QAAQC,IAAKN,KAAKtB,MAAMqB,IACtDQ,UAAU,EAAMC,MAAM,EAAMC,QAAQ,OAAOC,YAAY,KAE7D,4BAAQL,IAAI,UAAUrC,MAAOA,EAAOC,OAAQA,S,GA5FlC0C,cCClBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.ce798c01.chunk.js","sourcesContent":["import React, {Component} from 'react';\n//import v1 from './assets/small1.mov';\n//import v2 from './assets/wendy.MOV';\nimport './App.css';\n\nclass App extends Component {\n  \n  constructor() {\n    super();\n    this.state = {\n      lastTime: -1,\n      url: 'https://storage.googleapis.com/ntch-dance-video/5%20wendy-%7F%7F%7F%7F%7F%7F%7F%7F%7F.MOV'\n    };\n  }\n\n  componentDidMount() {\n    this.initRefs();\n    this.updateCanvas();\n    this.updateWindowDimensions();\n    window.addEventListener('resize', this.updateWindowDimensions);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.updateWindowDimensions);\n  }\n\n  initRefs = () => {\n    this.setState({\n      video: this.refs.video,\n      // ctx1: this.refs.canvas1.getContext('2d'),\n      ctx2: this.refs.canvas2.getContext('2d'),\n      width: 0,\n      height: 0,\n      prevFrames: []\n    })\n    //this.refs.video.play();\n    //this.refs.video.loop = true;\n    console.log(this.refs.video);\n  }\n\n  updateWindowDimensions = () => {\n    this.setState({ \n      width: window.innerWidth, \n      height: window.innerHeight \n    });\n  }\n\n  updateCanvas = () => {\n    let {video, lastTime} = this.state;\n    let time = video === undefined ? lastTime : video.currentTime;\n    if (time !== lastTime) {\n      //console.log(video);\n      //console.log('updateCanvas');\n      //TODO:\n      this.computeFrame();\n    }\n    //this.setState({hey: 2}); \n    requestAnimationFrame(this.updateCanvas);\n  }\n\n  computeFrame = () => {\n    let {ctx1, ctx2, video, width, height, prevFrames} = this.state;\n  \n    ctx2.drawImage(video, 0, 0, width, height);\n    let frame = ctx2.getImageData(0, 0, width, height);\n    let l = frame.data.length / 4;\n    let prevFrame;\n    if (prevFrames.length > 30) {\n      prevFrame = prevFrames.shift();\n    }\n    prevFrames.push(frame);\n    \n    \n    if (prevFrame !== undefined) {\n      for (let i = 0; i < l; i++) {\n        let r = frame.data[i * 4 + 0]*1 + prevFrame.data[i * 4 + 0]*0.5;\n        let g = frame.data[i * 4 + 1]*1 + prevFrame.data[i * 4 + 1]*0.5;\n        let b = frame.data[i * 4 + 2]*1 + prevFrame.data[i * 4 + 2]*0.5;\n        \n        frame.data[i * 4 + 0] = r;\n        frame.data[i * 4 + 1] = g;\n        frame.data[i * 4 + 2] = b;\n\n      }\n    }\n    ctx2.putImageData(frame, 0, 0);\n  }\n\n  render() {\n    //let {width, height} = this.state;\n    var width = window.innerWidth;\n    var height = window.innerHeight;\n    return (\n      <div>\n        <video style={{display:'none'}} ref='video' src={this.state.url} \n              autoPlay={true} loop={true} preload='auto' crossOrigin=''/>\n        {/* <canvas ref='canvas1' width={width} height={height}></canvas> */}\n        <canvas ref='canvas2' width={width} height={height}></canvas>\n      </div>\n    );\n  }\n\n\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n//import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n"],"sourceRoot":""}